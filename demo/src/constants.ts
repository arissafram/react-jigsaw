import { Field } from './types';

// These are hardcoded based on the current props. New props would need to be manually
// added to this menu to appear in the demo options.
export const FIELDS: Field[] = [
  {
    name: 'board',
    label: 'board:',
    type: 'text',
    indent: 1,
    isKey: true,
    isBrace: true,
    braceType: 'open',
  },
  { name: 'board.columns', label: 'columns:', type: 'number', indent: 2 },
  { name: 'board.height', label: 'height:', type: 'number', indent: 2 },
  { name: 'board.outlineStrokeColor', label: 'outlineStrokeColor:', type: 'text', indent: 2 },
  { name: 'board.rows', label: 'rows:', type: 'number', indent: 2 },
  { name: 'board.scatterArea', label: 'scatterArea:', type: 'number', indent: 2 },
  {
    name: 'board.showBoardSlotOutlines',
    label: 'showBoardSlotOutlines:',
    type: 'checkbox',
    indent: 2,
  },
  { name: 'board.snapThreshold', label: 'snapThreshold:', type: 'number', indent: 2 },
  { name: 'board.width', label: 'width:', type: 'number', indent: 2 },
  { name: 'board', label: '', type: 'text', indent: 1, isBrace: true, braceType: 'close' },

  {
    name: 'puzzle',
    label: 'puzzle:',
    type: 'text',
    indent: 1,
    isKey: true,
    isBrace: true,
    braceType: 'open',
  },
  {
    name: 'puzzle.refreshButton',
    label: 'refreshButton:',
    type: 'text',
    indent: 2,
    isKey: true,
    isBrace: true,
    braceType: 'open',
  },
  { name: 'puzzle.refreshButton.className', label: 'className:', type: 'text', indent: 3 },
  { name: 'puzzle.refreshButton.enabled', label: 'enabled:', type: 'checkbox', indent: 3 },
  {
    name: 'puzzle.refreshButton',
    label: '',
    type: 'text',
    indent: 2,
    isBrace: true,
    braceType: 'close',
  },
  { name: 'puzzle.responsive', label: 'responsive:', type: 'checkbox', indent: 2 },
  // {
  //   name: 'puzzle.rowsAndColumns',
  //   label: 'rowsAndColumns:',
  //   type: 'text',
  //   indent: 2,
  //   isKey: true,
  //   isBrace: true,
  //   braceType: 'open',
  // },
  // TODO: There's a conflict with local storage in the demo, so we'll omit this for now
  // { name: 'puzzle.rowsAndColumns.className', label: 'className:', type: 'text', indent: 3 },
  // { name: 'puzzle.rowsAndColumns.enabled', label: 'enabled:', type: 'checkbox', indent: 3 },
  // {
  //   name: 'puzzle.rowsAndColumns',
  //   label: '',
  //   type: 'text',
  //   indent: 2,
  //   isBrace: true,
  //   braceType: 'close',
  // },
  {
    name: 'puzzle.timer',
    label: 'timer:',
    type: 'text',
    indent: 2,
    isKey: true,
    isBrace: true,
    braceType: 'open',
  },
  { name: 'puzzle.timer.className', label: 'className:', type: 'text', indent: 3 },
  { name: 'puzzle.timer.enabled', label: 'enabled:', type: 'checkbox', indent: 3 },
  { name: 'puzzle.timer', label: '', type: 'text', indent: 2, isBrace: true, braceType: 'close' },
  { name: 'puzzle', label: '', type: 'text', indent: 1, isBrace: true, braceType: 'close' },

  {
    name: 'puzzlePiece',
    label: 'puzzlePiece:',
    type: 'text',
    indent: 1,
    isKey: true,
    isBrace: true,
    braceType: 'open',
  },
  { name: 'puzzlePiece.strokeColor', label: 'strokeColor:', type: 'text', indent: 2 },
  { name: 'puzzlePiece.strokeEnabled', label: 'strokeEnabled:', type: 'checkbox', indent: 2 },
  { name: 'puzzlePiece', label: '', type: 'text', indent: 1, isBrace: true, braceType: 'close' },

  { name: 'root', label: '', type: 'text', indent: 0, isBrace: true, braceType: 'close' },
];
